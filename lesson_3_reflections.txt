When would you want to use a remote repository rather than keeping all your work
local?

    When I have to work from more than one location/computer
    or if someone else is working on the project too.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Changes might be made public before they're ready. An unusable version
    of the project might be made available as only one part of the intended
    multi-part change might be uploaded.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork is GitHub's term for cloning within the GitHub servers. A clone is an
    independent copy of a repository. A branch is within a single repository and
    can later be merged with other branches. I don't know if clones/forks can
    somehow be merged.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can work on it offline.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    - one could use a different version control system (Subversion, etc.)
    - each contributor could be assigned a file and no one else is allowed to
    change that file (this is not very convenient)
    - the team could have regular meetings to discuss conflicts before attempting
    to build or after a failed build (this sounds awful)
    
    I can't really compare Git to Subversion yet, so I can't say which is harder.
    Using Git is *much* easier than my other examples.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
