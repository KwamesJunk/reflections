What happens when you initialize a repository? Why do you need to do it?

Git gets ready to accept commits and stuff by making a .git directory with
repository metadata.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

It's version control purgatory. It lets you commit all parts of a single logical
change over multiple files. Yay!

How can you use the staging area to make sure you have one commit per logical
change?

Only add the files that are involved in the logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

It's good for trying out new ideas without wrecking the main project. It's fun.

How do the diagrams help you visualize the branch structure?

They make it easy to understand how each commit relates to each other. It also
explains how some commits can be unreachable from others.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

Git uses an algorithm to include changes from both branches. If there aren't any 
conflicts, then both sets of changes should be in the result. It's represented
in the diagram this way because the new head commit has two parents.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

Doing all merges manually is a pain the behind, but it's the most accurate.
Automatic merging is faster and less trouble, but it can result in conflicts.

